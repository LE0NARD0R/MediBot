require("dotenv").config();
const mongoose = require('mongoose');
mongoose.connect(process.env.DB_URL)

const {
  createBot,
  createProvider,
  createFlow,
  addKeyword,
  addAnswer,
  EVENTS,
} = require("@bot-whatsapp/bot");

const QRPortalWeb = require("@bot-whatsapp/portal");
const BaileysProvider = require("@bot-whatsapp/provider/baileys");
const MockAdapter = require("@bot-whatsapp/database/mock");
const { handlerAI } = require("./utils");
const { responseIA } = require("./services/completion");
const { textToVoice } = require("./services/eventlab");
const Conv = require('./services/mongo');

const interactions =  ['Quiero asegurarte que he recibido tus mensajes y estoy aquÃ­ para escuchar y comprender tus inquietudes mÃ©dicas.', 'Quiero que sepas que estoy aquÃ­ para escucharte. Tu descripciÃ³n y los audios que has compartido son importantes para entender mejor tu situaciÃ³n de salud.', 'Quiero que sepas que estoy aquÃ­ para brindarte apoyo y responder a tus preguntas de manera comprensiva.', 'Estoy trabajando en revisar los detalles para proporcionarte una evaluaciÃ³n precisa. Por favor, ten paciencia mientras proceso la informaciÃ³n.', 'Estoy aquÃ­ para colaborar contigo en tu camino hacia el bienestar.']

const flowHola = addKeyword([
  "hola",
  "ole",
  "buenos",
  "buenas",
  "ola",
  'ayuda',
  'siento',
]).addAnswer("Saludos! EstÃ¡s hablando con MediBot. EnvÃ­ame un audio con tus sÃ­ntomas",);

/*async (_, { flowDynamic }) => {
    console.log("ðŸ™‰ texto a voz....");
    const path = await textToVoice("CÃ³mo se encuentra el dÃ­a de hoy?");
    console.log(`ðŸ™‰ Fin texto a voz....[PATH]:${path}`);
    await flowDynamic([{ body: "escucha", media: path }]);
  }*/
// colocarle nuevos triggers.


const flowVoiceNote = addKeyword(EVENTS.VOICE_NOTE).addAction(
  async (ctx, ctxFn) => {
    const phrase = getRandomItem(interactions)
    await ctxFn.flowDynamic('Â¡Hola! '+ ctx.pushName + ' gracias por contactar a MediBot. ' + phrase );
    console.log("ðŸ¤– voz a texto....");
    const text = await handlerAI(ctx);
    console.log(`ðŸ¤– Fin voz a texto....: ${text}`);
    const response = await responseIA(text, ctx);
    const id = await Conv.findOne({name: ctx.pushName}, '_id')
    const conv = await Conv.findById(id)
    conv.role.push('assistant')
    conv.content.push(response)
    await conv.save()
    const path = await textToVoice(response)
    await ctxFn.flowDynamic([{ body: "escucha", media: path }])
    // await ctxFn.flowDynamic(response);
  }
);
const main = async () => {
  const adapterDB = new MockAdapter();
  const adapterFlow = createFlow([flowHola, flowVoiceNote]);
  const adapterProvider = createProvider(BaileysProvider);

  createBot({
    flow: adapterFlow,
    provider: adapterProvider,
    database: adapterDB,
  });

  QRPortalWeb();
};
function getRandomItem(arr) {
  const randomIndex = Math.floor(Math.random() * arr.length);
  const item = arr[randomIndex];
  return item;
}

main();
